  tosca_definitions_version: tosca_simple_yaml_1_0
  
  imports:
    - ec3_custom_types: https://raw.githubusercontent.com/grycap/ec3/tosca/tosca/custom_types.yaml
  
  description: TOSCA template for deploying an instance for OpenBioMaps using the type SoftwareComponent
  
  metadata:
    display_name: Deploy an OpenBioMaps portal
    icon: https://openbiomaps.org/img/OpenBioMaps.png
    tag: VM

  topology_template:
    inputs:
      number_cpus:
        type: integer
        description: number of cpus required for the instance
        default: 1
        constraints:
        - valid_values: [ 1, 2, 4, 8, 16, 32 ]
      memory_size:
        type: string
        description: ram memory required for the instance
        default: 2 GB
        constraints:
        - valid_values: [ 2 GB, 4 GB, 8 GB, 16 GB, 32 GB, 64 GB, 128 GB ]
      disk_size:
        type: string
        #type: scalar-unit.size
        description: Size of the disk to be attached to the instance
        default: 10 GB
        constraints:
        - valid_values: [ 10 GB, 20 GB, 50 GB, 100 GB, 200 GB, 500 GB, 1 TB, 2 TB ]

    node_templates:

      obm:
        type: tosca.nodes.WebServer
        capabilities:
          admin_endpoint:
            properties:
              port: 9890
              protocol: tcp
        requirements:
          - host: obm_server 
        artifacts:
          galaxy_role:
            file: grycap.docker
            type: tosca.artifacts.AnsibleGalaxy.role
        interfaces:
          Standard:
            configure:
              implementation: https://raw.githubusercontent.com/grycap/ec3/tosca/tosca/artifacts/obm_install.yml

      obm_server:
        type: tosca.nodes.indigo.Compute
        capabilities:
          endpoint:
            properties:
              network_name: PUBLIC
              ports:
                ssh_port:
                  protocol: tcp
                  source: 22
          host:
           properties:
             num_cpus: { get_input: number_cpus }
             mem_size: { get_input: memory_size }
          os:
            properties:
              type: linux
        requirements:
        - local_storage:
            node: my_block_storage           
            relationship:
              type: AttachesTo
              properties:
                location: /mnt/disk
                # device: hdb

      my_block_storage:
        type: tosca.nodes.BlockStorage
        properties:
         size: { get_input: disk_size }

    outputs:
      obm_url:
        value: { concat: [ 'http://', get_attribute: [ obm_server, public_address, 0 ], ':9890/' ] }
